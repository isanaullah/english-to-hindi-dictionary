/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/dashboard2.js":
/*!************************************!*\
  !*** ./resources/js/dashboard2.js ***!
  \************************************/
/***/ (() => {

eval("/* global Chart:false */\n$(function () {\n  'use strict';\n  /* ChartJS\n   * -------\n   * Here we will create a few charts using ChartJS\n   */\n  //-----------------------\n  // - MONTHLY SALES CHART -\n  //-----------------------\n  // Get context with jQuery - using jQuery's .get() method.\n\n  var salesChartCanvas = $('#salesChart').get(0).getContext('2d');\n  var salesChartData = {\n    labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],\n    datasets: [{\n      label: 'Digital Goods',\n      backgroundColor: 'rgba(60,141,188,0.9)',\n      borderColor: 'rgba(60,141,188,0.8)',\n      pointRadius: false,\n      pointColor: '#3b8bba',\n      pointStrokeColor: 'rgba(60,141,188,1)',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(60,141,188,1)',\n      data: [28, 48, 40, 19, 86, 27, 90]\n    }, {\n      label: 'Electronics',\n      backgroundColor: 'rgba(210, 214, 222, 1)',\n      borderColor: 'rgba(210, 214, 222, 1)',\n      pointRadius: false,\n      pointColor: 'rgba(210, 214, 222, 1)',\n      pointStrokeColor: '#c1c7d1',\n      pointHighlightFill: '#fff',\n      pointHighlightStroke: 'rgba(220,220,220,1)',\n      data: [65, 59, 80, 81, 56, 55, 40]\n    }]\n  };\n  var salesChartOptions = {\n    maintainAspectRatio: false,\n    responsive: true,\n    legend: {\n      display: false\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          display: false\n        }\n      }]\n    }\n  }; // This will get the first returned node in the jQuery collection.\n  // eslint-disable-next-line no-unused-vars\n\n  var salesChart = new Chart(salesChartCanvas, {\n    type: 'line',\n    data: salesChartData,\n    options: salesChartOptions\n  }); //---------------------------\n  // - END MONTHLY SALES CHART -\n  //---------------------------\n  //-------------\n  // - PIE CHART -\n  //-------------\n  // Get context with jQuery - using jQuery's .get() method.\n\n  var pieChartCanvas = $('#pieChart').get(0).getContext('2d');\n  var pieData = {\n    labels: ['Chrome', 'IE', 'FireFox', 'Safari', 'Opera', 'Navigator'],\n    datasets: [{\n      data: [700, 500, 400, 600, 300, 100],\n      backgroundColor: ['#f56954', '#00a65a', '#f39c12', '#00c0ef', '#3c8dbc', '#d2d6de']\n    }]\n  };\n  var pieOptions = {\n    legend: {\n      display: false\n    }\n  }; // Create pie or douhnut chart\n  // You can switch between pie and douhnut using the method below.\n  // eslint-disable-next-line no-unused-vars\n\n  var pieChart = new Chart(pieChartCanvas, {\n    type: 'doughnut',\n    data: pieData,\n    options: pieOptions\n  }); //-----------------\n  // - END PIE CHART -\n  //-----------------\n\n  /* jVector Maps\n   * ------------\n   * Create a world map with markers\n   */\n\n  $('#world-map-markers').mapael({\n    map: {\n      name: 'usa_states',\n      zoom: {\n        enabled: true,\n        maxLevel: 10\n      }\n    }\n  }); // $('#world-map-markers').vectorMap({\n  //   map              : 'world_en',\n  //   normalizeFunction: 'polynomial',\n  //   hoverOpacity     : 0.7,\n  //   hoverColor       : false,\n  //   backgroundColor  : 'transparent',\n  //   regionStyle      : {\n  //     initial      : {\n  //       fill            : 'rgba(210, 214, 222, 1)',\n  //       'fill-opacity'  : 1,\n  //       stroke          : 'none',\n  //       'stroke-width'  : 0,\n  //       'stroke-opacity': 1\n  //     },\n  //     hover        : {\n  //       'fill-opacity': 0.7,\n  //       cursor        : 'pointer'\n  //     },\n  //     selected     : {\n  //       fill: 'yellow'\n  //     },\n  //     selectedHover: {}\n  //   },\n  //   markerStyle      : {\n  //     initial: {\n  //       fill  : '#00a65a',\n  //       stroke: '#111'\n  //     }\n  //   },\n  //   markers          : [\n  //     {\n  //       latLng: [41.90, 12.45],\n  //       name  : 'Vatican City'\n  //     },\n  //     {\n  //       latLng: [43.73, 7.41],\n  //       name  : 'Monaco'\n  //     },\n  //     {\n  //       latLng: [-0.52, 166.93],\n  //       name  : 'Nauru'\n  //     },\n  //     {\n  //       latLng: [-8.51, 179.21],\n  //       name  : 'Tuvalu'\n  //     },\n  //     {\n  //       latLng: [43.93, 12.46],\n  //       name  : 'San Marino'\n  //     },\n  //     {\n  //       latLng: [47.14, 9.52],\n  //       name  : 'Liechtenstein'\n  //     },\n  //     {\n  //       latLng: [7.11, 171.06],\n  //       name  : 'Marshall Islands'\n  //     },\n  //     {\n  //       latLng: [17.3, -62.73],\n  //       name  : 'Saint Kitts and Nevis'\n  //     },\n  //     {\n  //       latLng: [3.2, 73.22],\n  //       name  : 'Maldives'\n  //     },\n  //     {\n  //       latLng: [35.88, 14.5],\n  //       name  : 'Malta'\n  //     },\n  //     {\n  //       latLng: [12.05, -61.75],\n  //       name  : 'Grenada'\n  //     },\n  //     {\n  //       latLng: [13.16, -61.23],\n  //       name  : 'Saint Vincent and the Grenadines'\n  //     },\n  //     {\n  //       latLng: [13.16, -59.55],\n  //       name  : 'Barbados'\n  //     },\n  //     {\n  //       latLng: [17.11, -61.85],\n  //       name  : 'Antigua and Barbuda'\n  //     },\n  //     {\n  //       latLng: [-4.61, 55.45],\n  //       name  : 'Seychelles'\n  //     },\n  //     {\n  //       latLng: [7.35, 134.46],\n  //       name  : 'Palau'\n  //     },\n  //     {\n  //       latLng: [42.5, 1.51],\n  //       name  : 'Andorra'\n  //     },\n  //     {\n  //       latLng: [14.01, -60.98],\n  //       name  : 'Saint Lucia'\n  //     },\n  //     {\n  //       latLng: [6.91, 158.18],\n  //       name  : 'Federated States of Micronesia'\n  //     },\n  //     {\n  //       latLng: [1.3, 103.8],\n  //       name  : 'Singapore'\n  //     },\n  //     {\n  //       latLng: [1.46, 173.03],\n  //       name  : 'Kiribati'\n  //     },\n  //     {\n  //       latLng: [-21.13, -175.2],\n  //       name  : 'Tonga'\n  //     },\n  //     {\n  //       latLng: [15.3, -61.38],\n  //       name  : 'Dominica'\n  //     },\n  //     {\n  //       latLng: [-20.2, 57.5],\n  //       name  : 'Mauritius'\n  //     },\n  //     {\n  //       latLng: [26.02, 50.55],\n  //       name  : 'Bahrain'\n  //     },\n  //     {\n  //       latLng: [0.33, 6.73],\n  //       name  : 'São Tomé and Príncipe'\n  //     }\n  //   ]\n  // })\n}); // lgtm [js/unused-local-variable]//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvZGFzaGJvYXJkMi5qcz9lMmVlIl0sIm5hbWVzIjpbIiQiLCJzYWxlc0NoYXJ0Q2FudmFzIiwiZ2V0IiwiZ2V0Q29udGV4dCIsInNhbGVzQ2hhcnREYXRhIiwibGFiZWxzIiwiZGF0YXNldHMiLCJsYWJlbCIsImJhY2tncm91bmRDb2xvciIsImJvcmRlckNvbG9yIiwicG9pbnRSYWRpdXMiLCJwb2ludENvbG9yIiwicG9pbnRTdHJva2VDb2xvciIsInBvaW50SGlnaGxpZ2h0RmlsbCIsInBvaW50SGlnaGxpZ2h0U3Ryb2tlIiwiZGF0YSIsInNhbGVzQ2hhcnRPcHRpb25zIiwibWFpbnRhaW5Bc3BlY3RSYXRpbyIsInJlc3BvbnNpdmUiLCJsZWdlbmQiLCJkaXNwbGF5Iiwic2NhbGVzIiwieEF4ZXMiLCJncmlkTGluZXMiLCJ5QXhlcyIsInNhbGVzQ2hhcnQiLCJDaGFydCIsInR5cGUiLCJvcHRpb25zIiwicGllQ2hhcnRDYW52YXMiLCJwaWVEYXRhIiwicGllT3B0aW9ucyIsInBpZUNoYXJ0IiwibWFwYWVsIiwibWFwIiwibmFtZSIsInpvb20iLCJlbmFibGVkIiwibWF4TGV2ZWwiXSwibWFwcGluZ3MiOiJBQUFBO0FBRUFBLENBQUMsQ0FBQyxZQUFZO0FBQ1o7QUFFQTtBQUNGO0FBQ0E7QUFDQTtBQUVFO0FBQ0E7QUFDQTtBQUVBOztBQUNBLE1BQUlDLGdCQUFnQixHQUFHRCxDQUFDLENBQUMsYUFBRCxDQUFELENBQWlCRSxHQUFqQixDQUFxQixDQUFyQixFQUF3QkMsVUFBeEIsQ0FBbUMsSUFBbkMsQ0FBdkI7QUFFQSxNQUFJQyxjQUFjLEdBQUc7QUFDbkJDLElBQUFBLE1BQU0sRUFBRSxDQUFDLFNBQUQsRUFBWSxVQUFaLEVBQXdCLE9BQXhCLEVBQWlDLE9BQWpDLEVBQTBDLEtBQTFDLEVBQWlELE1BQWpELEVBQXlELE1BQXpELENBRFc7QUFFbkJDLElBQUFBLFFBQVEsRUFBRSxDQUNSO0FBQ0VDLE1BQUFB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QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNELENBelFBLENBQUQsQyxDQTJRQSIsInNvdXJjZXNDb250ZW50IjpbIi8qIGdsb2JhbCBDaGFydDpmYWxzZSAqL1xuXG4kKGZ1bmN0aW9uICgpIHtcbiAgJ3VzZSBzdHJpY3QnXG5cbiAgLyogQ2hhcnRKU1xuICAgKiAtLS0tLS0tXG4gICAqIEhlcmUgd2Ugd2lsbCBjcmVhdGUgYSBmZXcgY2hhcnRzIHVzaW5nIENoYXJ0SlNcbiAgICovXG5cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyAtIE1PTlRITFkgU0FMRVMgQ0hBUlQgLVxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLy8gR2V0IGNvbnRleHQgd2l0aCBqUXVlcnkgLSB1c2luZyBqUXVlcnkncyAuZ2V0KCkgbWV0aG9kLlxuICB2YXIgc2FsZXNDaGFydENhbnZhcyA9ICQoJyNzYWxlc0NoYXJ0JykuZ2V0KDApLmdldENvbnRleHQoJzJkJylcblxuICB2YXIgc2FsZXNDaGFydERhdGEgPSB7XG4gICAgbGFiZWxzOiBbJ0phbnVhcnknLCAnRmVicnVhcnknLCAnTWFyY2gnLCAnQXByaWwnLCAnTWF5JywgJ0p1bmUnLCAnSnVseSddLFxuICAgIGRhdGFzZXRzOiBbXG4gICAgICB7XG4gICAgICAgIGxhYmVsOiAnRGlnaXRhbCBHb29kcycsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoNjAsMTQxLDE4OCwwLjkpJyxcbiAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDYwLDE0MSwxODgsMC44KScsXG4gICAgICAgIHBvaW50UmFkaXVzOiBmYWxzZSxcbiAgICAgICAgcG9pbnRDb2xvcjogJyMzYjhiYmEnLFxuICAgICAgICBwb2ludFN0cm9rZUNvbG9yOiAncmdiYSg2MCwxNDEsMTg4LDEpJyxcbiAgICAgICAgcG9pbnRIaWdobGlnaHRGaWxsOiAnI2ZmZicsXG4gICAgICAgIHBvaW50SGlnaGxpZ2h0U3Ryb2tlOiAncmdiYSg2MCwxNDEsMTg4LDEpJyxcbiAgICAgICAgZGF0YTogWzI4LCA0OCwgNDAsIDE5LCA4NiwgMjcsIDkwXVxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgbGFiZWw6ICdFbGVjdHJvbmljcycsXG4gICAgICAgIGJhY2tncm91bmRDb2xvcjogJ3JnYmEoMjEwLCAyMTQsIDIyMiwgMSknLFxuICAgICAgICBib3JkZXJDb2xvcjogJ3JnYmEoMjEwLCAyMTQsIDIyMiwgMSknLFxuICAgICAgICBwb2ludFJhZGl1czogZmFsc2UsXG4gICAgICAgIHBvaW50Q29sb3I6ICdyZ2JhKDIxMCwgMjE0LCAyMjIsIDEpJyxcbiAgICAgICAgcG9pbnRTdHJva2VDb2xvcjogJyNjMWM3ZDEnLFxuICAgICAgICBwb2ludEhpZ2hsaWdodEZpbGw6ICcjZmZmJyxcbiAgICAgICAgcG9pbnRIaWdobGlnaHRTdHJva2U6ICdyZ2JhKDIyMCwyMjAsMjIwLDEpJyxcbiAgICAgICAgZGF0YTogWzY1LCA1OSwgODAsIDgxLCA1NiwgNTUsIDQwXVxuICAgICAgfVxuICAgIF1cbiAgfVxuXG4gIHZhciBzYWxlc0NoYXJ0T3B0aW9ucyA9IHtcbiAgICBtYWludGFpbkFzcGVjdFJhdGlvOiBmYWxzZSxcbiAgICByZXNwb25zaXZlOiB0cnVlLFxuICAgIGxlZ2VuZDoge1xuICAgICAgZGlzcGxheTogZmFsc2VcbiAgICB9LFxuICAgIHNjYWxlczoge1xuICAgICAgeEF4ZXM6IFt7XG4gICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH1dLFxuICAgICAgeUF4ZXM6IFt7XG4gICAgICAgIGdyaWRMaW5lczoge1xuICAgICAgICAgIGRpc3BsYXk6IGZhbHNlXG4gICAgICAgIH1cbiAgICAgIH1dXG4gICAgfVxuICB9XG5cbiAgLy8gVGhpcyB3aWxsIGdldCB0aGUgZmlyc3QgcmV0dXJuZWQgbm9kZSBpbiB0aGUgalF1ZXJ5IGNvbGxlY3Rpb24uXG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bnVzZWQtdmFyc1xuICB2YXIgc2FsZXNDaGFydCA9IG5ldyBDaGFydChzYWxlc0NoYXJ0Q2FudmFzLCB7XG4gICAgdHlwZTogJ2xpbmUnLFxuICAgIGRhdGE6IHNhbGVzQ2hhcnREYXRhLFxuICAgIG9wdGlvbnM6IHNhbGVzQ2hhcnRPcHRpb25zXG4gIH1cbiAgKVxuXG4gIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG4gIC8vIC0gRU5EIE1PTlRITFkgU0FMRVMgQ0hBUlQgLVxuICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuXG4gIC8vLS0tLS0tLS0tLS0tLVxuICAvLyAtIFBJRSBDSEFSVCAtXG4gIC8vLS0tLS0tLS0tLS0tLVxuICAvLyBHZXQgY29udGV4dCB3aXRoIGpRdWVyeSAtIHVzaW5nIGpRdWVyeSdzIC5nZXQoKSBtZXRob2QuXG4gIHZhciBwaWVDaGFydENhbnZhcyA9ICQoJyNwaWVDaGFydCcpLmdldCgwKS5nZXRDb250ZXh0KCcyZCcpXG4gIHZhciBwaWVEYXRhID0ge1xuICAgIGxhYmVsczogW1xuICAgICAgJ0Nocm9tZScsXG4gICAgICAnSUUnLFxuICAgICAgJ0ZpcmVGb3gnLFxuICAgICAgJ1NhZmFyaScsXG4gICAgICAnT3BlcmEnLFxuICAgICAgJ05hdmlnYXRvcidcbiAgICBdLFxuICAgIGRhdGFzZXRzOiBbXG4gICAgICB7XG4gICAgICAgIGRhdGE6IFs3MDAsIDUwMCwgNDAwLCA2MDAsIDMwMCwgMTAwXSxcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbJyNmNTY5NTQnLCAnIzAwYTY1YScsICcjZjM5YzEyJywgJyMwMGMwZWYnLCAnIzNjOGRiYycsICcjZDJkNmRlJ11cbiAgICAgIH1cbiAgICBdXG4gIH1cbiAgdmFyIHBpZU9wdGlvbnMgPSB7XG4gICAgbGVnZW5kOiB7XG4gICAgICBkaXNwbGF5OiBmYWxzZVxuICAgIH1cbiAgfVxuICAvLyBDcmVhdGUgcGllIG9yIGRvdWhudXQgY2hhcnRcbiAgLy8gWW91IGNhbiBzd2l0Y2ggYmV0d2VlbiBwaWUgYW5kIGRvdWhudXQgdXNpbmcgdGhlIG1ldGhvZCBiZWxvdy5cbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzXG4gIHZhciBwaWVDaGFydCA9IG5ldyBDaGFydChwaWVDaGFydENhbnZhcywge1xuICAgIHR5cGU6ICdkb3VnaG51dCcsXG4gICAgZGF0YTogcGllRGF0YSxcbiAgICBvcHRpb25zOiBwaWVPcHRpb25zXG4gIH0pXG5cbiAgLy8tLS0tLS0tLS0tLS0tLS0tLVxuICAvLyAtIEVORCBQSUUgQ0hBUlQgLVxuICAvLy0tLS0tLS0tLS0tLS0tLS0tXG5cbiAgLyogalZlY3RvciBNYXBzXG4gICAqIC0tLS0tLS0tLS0tLVxuICAgKiBDcmVhdGUgYSB3b3JsZCBtYXAgd2l0aCBtYXJrZXJzXG4gICAqL1xuICAkKCcjd29ybGQtbWFwLW1hcmtlcnMnKS5tYXBhZWwoe1xuICAgIG1hcDoge1xuICAgICAgbmFtZTogJ3VzYV9zdGF0ZXMnLFxuICAgICAgem9vbToge1xuICAgICAgICBlbmFibGVkOiB0cnVlLFxuICAgICAgICBtYXhMZXZlbDogMTBcbiAgICAgIH1cbiAgICB9XG4gIH0pXG5cbiAgLy8gJCgnI3dvcmxkLW1hcC1tYXJrZXJzJykudmVjdG9yTWFwKHtcbiAgLy8gICBtYXAgICAgICAgICAgICAgIDogJ3dvcmxkX2VuJyxcbiAgLy8gICBub3JtYWxpemVGdW5jdGlvbjogJ3BvbHlub21pYWwnLFxuICAvLyAgIGhvdmVyT3BhY2l0eSAgICAgOiAwLjcsXG4gIC8vICAgaG92ZXJDb2xvciAgICAgICA6IGZhbHNlLFxuICAvLyAgIGJhY2tncm91bmRDb2xvciAgOiAndHJhbnNwYXJlbnQnLFxuICAvLyAgIHJlZ2lvblN0eWxlICAgICAgOiB7XG4gIC8vICAgICBpbml0aWFsICAgICAgOiB7XG4gIC8vICAgICAgIGZpbGwgICAgICAgICAgICA6ICdyZ2JhKDIxMCwgMjE0LCAyMjIsIDEpJyxcbiAgLy8gICAgICAgJ2ZpbGwtb3BhY2l0eScgIDogMSxcbiAgLy8gICAgICAgc3Ryb2tlICAgICAgICAgIDogJ25vbmUnLFxuICAvLyAgICAgICAnc3Ryb2tlLXdpZHRoJyAgOiAwLFxuICAvLyAgICAgICAnc3Ryb2tlLW9wYWNpdHknOiAxXG4gIC8vICAgICB9LFxuICAvLyAgICAgaG92ZXIgICAgICAgIDoge1xuICAvLyAgICAgICAnZmlsbC1vcGFjaXR5JzogMC43LFxuICAvLyAgICAgICBjdXJzb3IgICAgICAgIDogJ3BvaW50ZXInXG4gIC8vICAgICB9LFxuICAvLyAgICAgc2VsZWN0ZWQgICAgIDoge1xuICAvLyAgICAgICBmaWxsOiAneWVsbG93J1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHNlbGVjdGVkSG92ZXI6IHt9XG4gIC8vICAgfSxcbiAgLy8gICBtYXJrZXJTdHlsZSAgICAgIDoge1xuICAvLyAgICAgaW5pdGlhbDoge1xuICAvLyAgICAgICBmaWxsICA6ICcjMDBhNjVhJyxcbiAgLy8gICAgICAgc3Ryb2tlOiAnIzExMSdcbiAgLy8gICAgIH1cbiAgLy8gICB9LFxuICAvLyAgIG1hcmtlcnMgICAgICAgICAgOiBbXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWzQxLjkwLCAxMi40NV0sXG4gIC8vICAgICAgIG5hbWUgIDogJ1ZhdGljYW4gQ2l0eSdcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWzQzLjczLCA3LjQxXSxcbiAgLy8gICAgICAgbmFtZSAgOiAnTW9uYWNvJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbLTAuNTIsIDE2Ni45M10sXG4gIC8vICAgICAgIG5hbWUgIDogJ05hdXJ1J1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbLTguNTEsIDE3OS4yMV0sXG4gIC8vICAgICAgIG5hbWUgIDogJ1R1dmFsdSdcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWzQzLjkzLCAxMi40Nl0sXG4gIC8vICAgICAgIG5hbWUgIDogJ1NhbiBNYXJpbm8nXG4gIC8vICAgICB9LFxuICAvLyAgICAge1xuICAvLyAgICAgICBsYXRMbmc6IFs0Ny4xNCwgOS41Ml0sXG4gIC8vICAgICAgIG5hbWUgIDogJ0xpZWNodGVuc3RlaW4nXG4gIC8vICAgICB9LFxuICAvLyAgICAge1xuICAvLyAgICAgICBsYXRMbmc6IFs3LjExLCAxNzEuMDZdLFxuICAvLyAgICAgICBuYW1lICA6ICdNYXJzaGFsbCBJc2xhbmRzJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbMTcuMywgLTYyLjczXSxcbiAgLy8gICAgICAgbmFtZSAgOiAnU2FpbnQgS2l0dHMgYW5kIE5ldmlzJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbMy4yLCA3My4yMl0sXG4gIC8vICAgICAgIG5hbWUgIDogJ01hbGRpdmVzJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbMzUuODgsIDE0LjVdLFxuICAvLyAgICAgICBuYW1lICA6ICdNYWx0YSdcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWzEyLjA1LCAtNjEuNzVdLFxuICAvLyAgICAgICBuYW1lICA6ICdHcmVuYWRhJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbMTMuMTYsIC02MS4yM10sXG4gIC8vICAgICAgIG5hbWUgIDogJ1NhaW50IFZpbmNlbnQgYW5kIHRoZSBHcmVuYWRpbmVzJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbMTMuMTYsIC01OS41NV0sXG4gIC8vICAgICAgIG5hbWUgIDogJ0JhcmJhZG9zJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbMTcuMTEsIC02MS44NV0sXG4gIC8vICAgICAgIG5hbWUgIDogJ0FudGlndWEgYW5kIEJhcmJ1ZGEnXG4gIC8vICAgICB9LFxuICAvLyAgICAge1xuICAvLyAgICAgICBsYXRMbmc6IFstNC42MSwgNTUuNDVdLFxuICAvLyAgICAgICBuYW1lICA6ICdTZXljaGVsbGVzJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbNy4zNSwgMTM0LjQ2XSxcbiAgLy8gICAgICAgbmFtZSAgOiAnUGFsYXUnXG4gIC8vICAgICB9LFxuICAvLyAgICAge1xuICAvLyAgICAgICBsYXRMbmc6IFs0Mi41LCAxLjUxXSxcbiAgLy8gICAgICAgbmFtZSAgOiAnQW5kb3JyYSdcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWzE0LjAxLCAtNjAuOThdLFxuICAvLyAgICAgICBuYW1lICA6ICdTYWludCBMdWNpYSdcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWzYuOTEsIDE1OC4xOF0sXG4gIC8vICAgICAgIG5hbWUgIDogJ0ZlZGVyYXRlZCBTdGF0ZXMgb2YgTWljcm9uZXNpYSdcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWzEuMywgMTAzLjhdLFxuICAvLyAgICAgICBuYW1lICA6ICdTaW5nYXBvcmUnXG4gIC8vICAgICB9LFxuICAvLyAgICAge1xuICAvLyAgICAgICBsYXRMbmc6IFsxLjQ2LCAxNzMuMDNdLFxuICAvLyAgICAgICBuYW1lICA6ICdLaXJpYmF0aSdcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWy0yMS4xMywgLTE3NS4yXSxcbiAgLy8gICAgICAgbmFtZSAgOiAnVG9uZ2EnXG4gIC8vICAgICB9LFxuICAvLyAgICAge1xuICAvLyAgICAgICBsYXRMbmc6IFsxNS4zLCAtNjEuMzhdLFxuICAvLyAgICAgICBuYW1lICA6ICdEb21pbmljYSdcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWy0yMC4yLCA1Ny41XSxcbiAgLy8gICAgICAgbmFtZSAgOiAnTWF1cml0aXVzJ1xuICAvLyAgICAgfSxcbiAgLy8gICAgIHtcbiAgLy8gICAgICAgbGF0TG5nOiBbMjYuMDIsIDUwLjU1XSxcbiAgLy8gICAgICAgbmFtZSAgOiAnQmFocmFpbidcbiAgLy8gICAgIH0sXG4gIC8vICAgICB7XG4gIC8vICAgICAgIGxhdExuZzogWzAuMzMsIDYuNzNdLFxuICAvLyAgICAgICBuYW1lICA6ICdTw6NvIFRvbcOpIGFuZCBQcsOtbmNpcGUnXG4gIC8vICAgICB9XG4gIC8vICAgXVxuICAvLyB9KVxufSlcblxuLy8gbGd0bSBbanMvdW51c2VkLWxvY2FsLXZhcmlhYmxlXVxuIl0sImZpbGUiOiIuL3Jlc291cmNlcy9qcy9kYXNoYm9hcmQyLmpzLmpzIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/dashboard2.js\n");

/***/ }),

/***/ "./resources/js/demo.js":
/*!******************************!*\
  !*** ./resources/js/demo.js ***!
  \******************************/
/***/ (() => {

eval("function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * AdminLTE Demo Menu\n * ------------------\n * You should not use this file in production.\n * This file is for demo purposes only.\n */\n\n/* eslint-disable camelcase */\n(function ($) {\n  'use strict';\n\n  function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  function createSkinBlock(colors, callback, noneSelected) {\n    var $block = $('<select />', {\n      \"class\": noneSelected ? 'custom-select mb-3 border-0' : 'custom-select mb-3 text-light border-0 ' + colors[0].replace(/accent-|navbar-/, 'bg-')\n    });\n\n    if (noneSelected) {\n      var $default = $('<option />', {\n        text: 'None Selected'\n      });\n\n      if (callback) {\n        $default.on('click', callback);\n      }\n\n      $block.append($default);\n    }\n\n    colors.forEach(function (color) {\n      var $color = $('<option />', {\n        \"class\": (_typeof(color) === 'object' ? color.join(' ') : color).replace('navbar-', 'bg-').replace('accent-', 'bg-'),\n        text: capitalizeFirstLetter((_typeof(color) === 'object' ? color.join(' ') : color).replace(/navbar-|accent-|bg-/, '').replace('-', ' '))\n      });\n      $block.append($color);\n      $color.data('color', color);\n\n      if (callback) {\n        $color.on('click', callback);\n      }\n    });\n    return $block;\n  }\n\n  var $sidebar = $('.control-sidebar');\n  var $container = $('<div />', {\n    \"class\": 'p-3 control-sidebar-content'\n  });\n  $sidebar.append($container); // Checkboxes\n\n  $container.append('<h5>Customize AdminLTE</h5><hr class=\"mb-2\"/>');\n  var $dark_mode_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('dark-mode'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('dark-mode');\n    } else {\n      $('body').removeClass('dark-mode');\n    }\n  });\n  var $dark_mode_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($dark_mode_checkbox).append('<span>Dark Mode</span>');\n  $container.append($dark_mode_container);\n  $container.append('<h6>Header Options</h6>');\n  var $header_fixed_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('layout-navbar-fixed'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('layout-navbar-fixed');\n    } else {\n      $('body').removeClass('layout-navbar-fixed');\n    }\n  });\n  var $header_fixed_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($header_fixed_checkbox).append('<span>Fixed</span>');\n  $container.append($header_fixed_container);\n  var $dropdown_legacy_offset_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-header').hasClass('dropdown-legacy'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-header').addClass('dropdown-legacy');\n    } else {\n      $('.main-header').removeClass('dropdown-legacy');\n    }\n  });\n  var $dropdown_legacy_offset_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($dropdown_legacy_offset_checkbox).append('<span>Dropdown Legacy Offset</span>');\n  $container.append($dropdown_legacy_offset_container);\n  var $no_border_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-header').hasClass('border-bottom-0'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-header').addClass('border-bottom-0');\n    } else {\n      $('.main-header').removeClass('border-bottom-0');\n    }\n  });\n  var $no_border_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($no_border_checkbox).append('<span>No border</span>');\n  $container.append($no_border_container);\n  $container.append('<h6>Sidebar Options</h6>');\n  var $sidebar_collapsed_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('sidebar-collapse'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('sidebar-collapse');\n      $(window).trigger('resize');\n    } else {\n      $('body').removeClass('sidebar-collapse');\n      $(window).trigger('resize');\n    }\n  });\n  var $sidebar_collapsed_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_collapsed_checkbox).append('<span>Collapsed</span>');\n  $container.append($sidebar_collapsed_container);\n  $(document).on('collapsed.lte.pushmenu', '[data-widget=\"pushmenu\"]', function () {\n    $sidebar_collapsed_checkbox.prop('checked', true);\n  });\n  $(document).on('shown.lte.pushmenu', '[data-widget=\"pushmenu\"]', function () {\n    $sidebar_collapsed_checkbox.prop('checked', false);\n  });\n  var $sidebar_fixed_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('layout-fixed'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('layout-fixed');\n      $(window).trigger('resize');\n    } else {\n      $('body').removeClass('layout-fixed');\n      $(window).trigger('resize');\n    }\n  });\n  var $sidebar_fixed_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_fixed_checkbox).append('<span>Fixed</span>');\n  $container.append($sidebar_fixed_container);\n  var $sidebar_mini_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('sidebar-mini'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('sidebar-mini');\n    } else {\n      $('body').removeClass('sidebar-mini');\n    }\n  });\n  var $sidebar_mini_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_mini_checkbox).append('<span>Sidebar Mini</span>');\n  $container.append($sidebar_mini_container);\n  var $sidebar_mini_md_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('sidebar-mini-md'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('sidebar-mini-md');\n    } else {\n      $('body').removeClass('sidebar-mini-md');\n    }\n  });\n  var $sidebar_mini_md_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_mini_md_checkbox).append('<span>Sidebar Mini MD</span>');\n  $container.append($sidebar_mini_md_container);\n  var $sidebar_mini_xs_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('sidebar-mini-xs'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('sidebar-mini-xs');\n    } else {\n      $('body').removeClass('sidebar-mini-xs');\n    }\n  });\n  var $sidebar_mini_xs_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($sidebar_mini_xs_checkbox).append('<span>Sidebar Mini XS</span>');\n  $container.append($sidebar_mini_xs_container);\n  var $flat_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-flat'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-flat');\n    } else {\n      $('.nav-sidebar').removeClass('nav-flat');\n    }\n  });\n  var $flat_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($flat_sidebar_checkbox).append('<span>Nav Flat Style</span>');\n  $container.append($flat_sidebar_container);\n  var $legacy_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-legacy'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-legacy');\n    } else {\n      $('.nav-sidebar').removeClass('nav-legacy');\n    }\n  });\n  var $legacy_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($legacy_sidebar_checkbox).append('<span>Nav Legacy Style</span>');\n  $container.append($legacy_sidebar_container);\n  var $compact_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-compact'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-compact');\n    } else {\n      $('.nav-sidebar').removeClass('nav-compact');\n    }\n  });\n  var $compact_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($compact_sidebar_checkbox).append('<span>Nav Compact</span>');\n  $container.append($compact_sidebar_container);\n  var $child_indent_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-child-indent'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-child-indent');\n    } else {\n      $('.nav-sidebar').removeClass('nav-child-indent');\n    }\n  });\n  var $child_indent_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($child_indent_sidebar_checkbox).append('<span>Nav Child Indent</span>');\n  $container.append($child_indent_sidebar_container);\n  var $child_hide_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('nav-collapse-hide-child'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('nav-collapse-hide-child');\n    } else {\n      $('.nav-sidebar').removeClass('nav-collapse-hide-child');\n    }\n  });\n  var $child_hide_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($child_hide_sidebar_checkbox).append('<span>Nav Child Hide on Collapse</span>');\n  $container.append($child_hide_sidebar_container);\n  var $no_expand_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-sidebar').hasClass('sidebar-no-expand'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-sidebar').addClass('sidebar-no-expand');\n    } else {\n      $('.main-sidebar').removeClass('sidebar-no-expand');\n    }\n  });\n  var $no_expand_sidebar_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($no_expand_sidebar_checkbox).append('<span>Disable Hover/Focus Auto-Expand</span>');\n  $container.append($no_expand_sidebar_container);\n  $container.append('<h6>Footer Options</h6>');\n  var $footer_fixed_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('layout-footer-fixed'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('layout-footer-fixed');\n    } else {\n      $('body').removeClass('layout-footer-fixed');\n    }\n  });\n  var $footer_fixed_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($footer_fixed_checkbox).append('<span>Fixed</span>');\n  $container.append($footer_fixed_container);\n  $container.append('<h6>Small Text Options</h6>');\n  var $text_sm_body_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('body').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('body').addClass('text-sm');\n    } else {\n      $('body').removeClass('text-sm');\n    }\n  });\n  var $text_sm_body_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($text_sm_body_checkbox).append('<span>Body</span>');\n  $container.append($text_sm_body_container);\n  var $text_sm_header_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-header').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-header').addClass('text-sm');\n    } else {\n      $('.main-header').removeClass('text-sm');\n    }\n  });\n  var $text_sm_header_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($text_sm_header_checkbox).append('<span>Navbar</span>');\n  $container.append($text_sm_header_container);\n  var $text_sm_brand_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.brand-link').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.brand-link').addClass('text-sm');\n    } else {\n      $('.brand-link').removeClass('text-sm');\n    }\n  });\n  var $text_sm_brand_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($text_sm_brand_checkbox).append('<span>Brand</span>');\n  $container.append($text_sm_brand_container);\n  var $text_sm_sidebar_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.nav-sidebar').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.nav-sidebar').addClass('text-sm');\n    } else {\n      $('.nav-sidebar').removeClass('text-sm');\n    }\n  });\n  var $text_sm_sidebar_container = $('<div />', {\n    \"class\": 'mb-1'\n  }).append($text_sm_sidebar_checkbox).append('<span>Sidebar Nav</span>');\n  $container.append($text_sm_sidebar_container);\n  var $text_sm_footer_checkbox = $('<input />', {\n    type: 'checkbox',\n    value: 1,\n    checked: $('.main-footer').hasClass('text-sm'),\n    \"class\": 'mr-1'\n  }).on('click', function () {\n    if ($(this).is(':checked')) {\n      $('.main-footer').addClass('text-sm');\n    } else {\n      $('.main-footer').removeClass('text-sm');\n    }\n  });\n  var $text_sm_footer_container = $('<div />', {\n    \"class\": 'mb-4'\n  }).append($text_sm_footer_checkbox).append('<span>Footer</span>');\n  $container.append($text_sm_footer_container); // Color Arrays\n\n  var navbar_dark_skins = ['navbar-primary', 'navbar-secondary', 'navbar-info', 'navbar-success', 'navbar-danger', 'navbar-indigo', 'navbar-purple', 'navbar-pink', 'navbar-navy', 'navbar-lightblue', 'navbar-teal', 'navbar-cyan', 'navbar-dark', 'navbar-gray-dark', 'navbar-gray'];\n  var navbar_light_skins = ['navbar-light', 'navbar-warning', 'navbar-white', 'navbar-orange'];\n  var sidebar_colors = ['bg-primary', 'bg-warning', 'bg-info', 'bg-danger', 'bg-success', 'bg-indigo', 'bg-lightblue', 'bg-navy', 'bg-purple', 'bg-fuchsia', 'bg-pink', 'bg-maroon', 'bg-orange', 'bg-lime', 'bg-teal', 'bg-olive'];\n  var accent_colors = ['accent-primary', 'accent-warning', 'accent-info', 'accent-danger', 'accent-success', 'accent-indigo', 'accent-lightblue', 'accent-navy', 'accent-purple', 'accent-fuchsia', 'accent-pink', 'accent-maroon', 'accent-orange', 'accent-lime', 'accent-teal', 'accent-olive'];\n  var sidebar_skins = ['sidebar-dark-primary', 'sidebar-dark-warning', 'sidebar-dark-info', 'sidebar-dark-danger', 'sidebar-dark-success', 'sidebar-dark-indigo', 'sidebar-dark-lightblue', 'sidebar-dark-navy', 'sidebar-dark-purple', 'sidebar-dark-fuchsia', 'sidebar-dark-pink', 'sidebar-dark-maroon', 'sidebar-dark-orange', 'sidebar-dark-lime', 'sidebar-dark-teal', 'sidebar-dark-olive', 'sidebar-light-primary', 'sidebar-light-warning', 'sidebar-light-info', 'sidebar-light-danger', 'sidebar-light-success', 'sidebar-light-indigo', 'sidebar-light-lightblue', 'sidebar-light-navy', 'sidebar-light-purple', 'sidebar-light-fuchsia', 'sidebar-light-pink', 'sidebar-light-maroon', 'sidebar-light-orange', 'sidebar-light-lime', 'sidebar-light-teal', 'sidebar-light-olive']; // Navbar Variants\n\n  $container.append('<h6>Navbar Variants</h6>');\n  var $navbar_variants = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  var navbar_all_colors = navbar_dark_skins.concat(navbar_light_skins);\n  var $navbar_variants_colors = createSkinBlock(navbar_all_colors, function () {\n    var color = $(this).data('color');\n    var $main_header = $('.main-header');\n    $main_header.removeClass('navbar-dark').removeClass('navbar-light');\n    navbar_all_colors.forEach(function (color) {\n      $main_header.removeClass(color);\n    });\n    $(this).parent().removeClass().addClass('custom-select mb-3 text-light border-0 ');\n\n    if (navbar_dark_skins.indexOf(color) > -1) {\n      $main_header.addClass('navbar-dark');\n      $(this).parent().addClass(color).addClass('text-light');\n    } else {\n      $main_header.addClass('navbar-light');\n      $(this).parent().addClass(color);\n    }\n\n    $main_header.addClass(color);\n  });\n  var active_navbar_color = null;\n  $('.main-header')[0].classList.forEach(function (className) {\n    if (navbar_all_colors.indexOf(className) > -1 && active_navbar_color === null) {\n      active_navbar_color = className.replace('navbar-', 'bg-');\n    }\n  });\n  $navbar_variants_colors.find('option.' + active_navbar_color).prop('selected', true);\n  $navbar_variants_colors.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_navbar_color);\n  $navbar_variants.append($navbar_variants_colors);\n  $container.append($navbar_variants); // Sidebar Colors\n\n  $container.append('<h6>Accent Color Variants</h6>');\n  var $accent_variants = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  $container.append($accent_variants);\n  $container.append(createSkinBlock(accent_colors, function () {\n    var color = $(this).data('color');\n    var accent_class = color;\n    var $body = $('body');\n    accent_colors.forEach(function (skin) {\n      $body.removeClass(skin);\n    });\n    $body.addClass(accent_class);\n  }, true));\n  var active_accent_color = null;\n  $('body')[0].classList.forEach(function (className) {\n    if (accent_colors.indexOf(className) > -1 && active_accent_color === null) {\n      active_accent_color = className.replace('navbar-', 'bg-');\n    }\n  }); // $accent_variants.find('option.' + active_accent_color).prop('selected', true)\n  // $accent_variants.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_accent_color)\n\n  $container.append('<h6>Dark Sidebar Variants</h6>');\n  var $sidebar_variants_dark = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  $container.append($sidebar_variants_dark);\n  var $sidebar_dark_variants = createSkinBlock(sidebar_colors, function () {\n    var color = $(this).data('color');\n    var sidebar_class = 'sidebar-dark-' + color.replace('bg-', '');\n    var $sidebar = $('.main-sidebar');\n    sidebar_skins.forEach(function (skin) {\n      $sidebar.removeClass(skin);\n      $sidebar_light_variants.removeClass(skin.replace('sidebar-dark-', 'bg-')).removeClass('text-light');\n    });\n    $(this).parent().removeClass().addClass('custom-select mb-3 text-light border-0').addClass(color);\n    $sidebar_light_variants.find('option').prop('selected', false);\n    $sidebar.addClass(sidebar_class);\n    $('.sidebar').removeClass('os-theme-dark').addClass('os-theme-light');\n  }, true);\n  $container.append($sidebar_dark_variants);\n  var active_sidebar_dark_color = null;\n  $('.main-sidebar')[0].classList.forEach(function (className) {\n    var color = className.replace('sidebar-dark-', 'bg-');\n\n    if (sidebar_colors.indexOf(color) > -1 && active_sidebar_dark_color === null) {\n      active_sidebar_dark_color = color;\n    }\n  });\n  $sidebar_dark_variants.find('option.' + active_sidebar_dark_color).prop('selected', true);\n  $sidebar_dark_variants.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_sidebar_dark_color);\n  $container.append('<h6>Light Sidebar Variants</h6>');\n  var $sidebar_variants_light = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  $container.append($sidebar_variants_light);\n  var $sidebar_light_variants = createSkinBlock(sidebar_colors, function () {\n    var color = $(this).data('color');\n    var sidebar_class = 'sidebar-light-' + color.replace('bg-', '');\n    var $sidebar = $('.main-sidebar');\n    sidebar_skins.forEach(function (skin) {\n      $sidebar.removeClass(skin);\n      $sidebar_dark_variants.removeClass(skin.replace('sidebar-light-', 'bg-')).removeClass('text-light');\n    });\n    $(this).parent().removeClass().addClass('custom-select mb-3 text-light border-0').addClass(color);\n    $sidebar_dark_variants.find('option').prop('selected', false);\n    $sidebar.addClass(sidebar_class);\n    $('.sidebar').removeClass('os-theme-light').addClass('os-theme-dark');\n  }, true);\n  $container.append($sidebar_light_variants);\n  var active_sidebar_light_color = null;\n  $('.main-sidebar')[0].classList.forEach(function (className) {\n    var color = className.replace('sidebar-light-', 'bg-');\n\n    if (sidebar_colors.indexOf(color) > -1 && active_sidebar_light_color === null) {\n      active_sidebar_light_color = color;\n    }\n  });\n\n  if (active_sidebar_light_color !== null) {\n    $sidebar_light_variants.find('option.' + active_sidebar_light_color).prop('selected', true);\n    $sidebar_light_variants.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_sidebar_light_color);\n  }\n\n  var logo_skins = navbar_all_colors;\n  $container.append('<h6>Brand Logo Variants</h6>');\n  var $logo_variants = $('<div />', {\n    \"class\": 'd-flex'\n  });\n  $container.append($logo_variants);\n  var $clear_btn = $('<a />', {\n    href: '#'\n  }).text('clear').on('click', function (e) {\n    e.preventDefault();\n    var $logo = $('.brand-link');\n    logo_skins.forEach(function (skin) {\n      $logo.removeClass(skin);\n    });\n  });\n  var $brand_variants = createSkinBlock(logo_skins, function () {\n    var color = $(this).data('color');\n    var $logo = $('.brand-link');\n\n    if (color === 'navbar-light' || color === 'navbar-white') {\n      $logo.addClass('text-black');\n    } else {\n      $logo.removeClass('text-black');\n    }\n\n    logo_skins.forEach(function (skin) {\n      $logo.removeClass(skin);\n    });\n\n    if (color) {\n      $(this).parent().removeClass().addClass('custom-select mb-3 border-0').addClass(color).addClass(color !== 'navbar-light' && color !== 'navbar-white' ? 'text-light' : '');\n    } else {\n      $(this).parent().removeClass().addClass('custom-select mb-3 border-0');\n    }\n\n    $logo.addClass(color);\n  }, true).append($clear_btn);\n  $container.append($brand_variants);\n  var active_brand_color = null;\n  $('.brand-link')[0].classList.forEach(function (className) {\n    if (logo_skins.indexOf(className) > -1 && active_brand_color === null) {\n      active_brand_color = className.replace('navbar-', 'bg-');\n    }\n  });\n\n  if (active_brand_color) {\n    $brand_variants.find('option.' + active_brand_color).prop('selected', true);\n    $brand_variants.removeClass().addClass('custom-select mb-3 text-light border-0 ').addClass(active_brand_color);\n  }\n})(jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/demo.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	__webpack_modules__["./resources/js/demo.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/dashboard2.js"]();
/******/ 	
/******/ })()
;